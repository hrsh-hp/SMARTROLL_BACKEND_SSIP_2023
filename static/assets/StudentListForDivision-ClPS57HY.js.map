{"version":3,"file":"StudentListForDivision-ClPS57HY.js","sources":["../../node_modules/lucide-react/dist/esm/icons/minus.js","../../src/pages/division/pages/StudentListForDivision.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Minus = createLucideIcon(\"Minus\", [[\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }]]);\n\nexport { Minus as default };\n//# sourceMappingURL=minus.js.map\n","import {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Check,  Minus} from 'lucide-react'\n\n\n\n\n\nconst StudentListForDivision = ({divisionsData,setActiveTab,activeTab}:any) => {\n  \n  const renderTable = (data: any) => {\n  \n    return (\n      <Table>\n        {/* Table Header */}\n        \n        <TableHeader className='sticky top-0 bg-black'>\n          <TableRow>\n            <TableHead className=\"w-auto\">\n              Student Name\n            </TableHead>\n            <TableHead className=\"w-auto \">\n              Enrollment\n            </TableHead>\n  \n            {/* Dynamically create batch headers */}\n            {data?.total_batches.map((batch: string) => (\n              <TableHead className=\"w-auto\" key={batch}>\n                {batch}\n              </TableHead>\n            ))}\n          </TableRow>\n        </TableHeader>\n  \n        {/* Table Body */}\n        \n        <TableBody className='h-80 overflow-y-scroll'>\n          {data?.batches?.map((batch: any, batchIndex: number) => {\n            return batch.students.map((student: any, studentIndex: number) => {\n              return (\n                <TableRow key={`${batchIndex}-${studentIndex}`}>\n                  <TableCell className=\"font-medium\">\n                    {student.profile.name}\n                  </TableCell>\n                  <TableCell>{student.enrollment}</TableCell>\n  \n                  {/* Loop over total_batches to check each batch */}\n                  {data.total_batches.map((batchName: string) => {\n                    // Check if the current batch name matches the batch_name in the student data\n                    if (batchName === batch?.batch_name) {\n                      return (\n                        <TableCell key={batchName}>\n                          <Check className='text-green-700' /> {/* Render Check icon if the student is in this batch */}\n                        </TableCell>\n                      );\n                    } else {\n                      return (\n                        <TableCell key={batchName}>\n                          <Minus /> {/* Render Minus icon if the student is not in this batch */}\n                        </TableCell>\n                      );\n                    }\n                  })}\n                </TableRow>\n              );\n            });\n          })}\n        \n        </TableBody>\n      </Table>\n    );\n  };\n  \n  return (\n    \n    <div className=\"\">\n      <div className=\"mx-auto p-2 lg:p-4\">\n        <Tabs\n          value={activeTab}\n          onValueChange={(value:any) => {\n            setActiveTab(value)\n            \n          }}\n        >\n          <TabsList className=\"grid w-auto grid-cols-2\">\n            {\n              divisionsData?.divisions.map((division:any)=>{\n                return (\n                  <TabsTrigger value={division.division_name} key={division.division_name}>{division.division_name}</TabsTrigger>\n                )\n              })\n            }\n            \n            \n          </TabsList>\n          {\n            divisionsData?.divisions.map((division:any)=>{\n              return (\n                <TabsContent value={division.division_name} className=\"overflow-hidden mt-4\" key={division.division_name}>\n                  {divisionsData ? <div className='p-2 border-b border flex flex-col lg:flex-row justify-between text-xl font-bold'><p>Division -  {division.division_name}</p><p>Total Studentes -  {division.total_student_count} </p></div> : null}\n                  <div className=' h-[500px] '>\n                  {divisionsData && renderTable(division)}\n                \n                  </div>\n                </TabsContent>\n              )\n            })\n          }\n        </Tabs>\n      </div>\n    </div>\n  )\n}\n\nexport default StudentListForDivision"],"names":["Minus","createLucideIcon","StudentListForDivision","divisionsData","setActiveTab","activeTab","renderTable","data","Table","jsx","TableHeader","jsxs","TableRow","TableHead","batch","TableBody","batchIndex","student","studentIndex","TableCell","batchName","Check","Tabs","value","TabsList","division","TabsTrigger","TabsContent"],"mappings":"6JAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,EAAQC,EAAiB,QAAS,CAAC,CAAC,OAAQ,CAAE,EAAG,WAAY,IAAK,QAAQ,CAAE,CAAC,CAAC,ECM9EC,EAAyB,CAAC,CAAC,cAAAC,EAAc,aAAAC,EAAa,UAAAC,KAAmB,CAEvE,MAAAC,EAAeC,GAAc,OAEjC,cACGC,EAGC,CAAA,SAAA,CAAAC,MAACC,EAAY,CAAA,UAAU,wBACrB,SAAAC,EAAA,KAACC,EACC,CAAA,SAAA,CAACH,EAAA,IAAAI,EAAA,CAAU,UAAU,SAAS,SAE9B,eAAA,EACCJ,EAAA,IAAAI,EAAA,CAAU,UAAU,UAAU,SAE/B,aAAA,EAGCN,GAAA,YAAAA,EAAM,cAAc,IAAKO,GACvBL,EAAAA,IAAAI,EAAA,CAAU,UAAU,SAClB,SADgCC,CAAA,EAAAA,CAEnC,EACD,CAAA,CACH,CACF,CAAA,EAIAL,EAAAA,IAACM,GAAU,UAAU,yBAClB,6BAAM,wBAAS,IAAI,CAACD,EAAYE,IACxBF,EAAM,SAAS,IAAI,CAACG,EAAcC,WAEpCN,EACC,CAAA,SAAA,CAAAH,MAACU,EAAU,CAAA,UAAU,cAClB,SAAAF,EAAQ,QAAQ,KACnB,EACAR,EAAAA,IAACU,EAAW,CAAA,SAAAF,EAAQ,UAAW,CAAA,EAG9BV,EAAK,cAAc,IAAKa,GAEnBA,KAAcN,GAAA,YAAAA,EAAO,mBAEpBK,EACC,CAAA,SAAA,CAACV,EAAAA,IAAAY,EAAA,CAAM,UAAU,gBAAiB,CAAA,EAAE,GAAA,CAAA,EADtBD,CAEhB,SAICD,EACC,CAAA,SAAA,CAAAV,EAAA,IAACT,EAAM,EAAA,EAAE,GAAA,CAAA,EADKoB,CAEhB,CAGL,CAAA,CAAA,EAtBY,GAAGJ,CAAU,IAAIE,CAAY,EAuB5C,CAEH,GAGL,CACF,CAAA,CAAA,CAAA,EAIJ,aAEG,MAAI,CAAA,UAAU,GACb,SAACT,EAAA,IAAA,MAAA,CAAI,UAAU,qBACb,SAAAE,EAAA,KAACW,EAAA,CACC,MAAOjB,EACP,cAAgBkB,GAAc,CAC5BnB,EAAamB,CAAK,CAEpB,EAEA,SAAA,CAAAd,MAACe,GAAS,UAAU,0BAEhB,0BAAe,UAAU,IAAKC,GAE1BhB,MAACiB,GAAY,MAAOD,EAAS,cAA6C,SAASA,EAAA,aAAA,EAAlCA,EAAS,aAAuC,GAMzG,EAEEtB,GAAA,YAAAA,EAAe,UAAU,IAAKsB,UAEzBE,EAAY,CAAA,MAAOF,EAAS,cAAe,UAAU,uBACnD,SAAA,CAAgBtB,EAAAQ,EAAA,KAAC,MAAI,CAAA,UAAU,kFAAkF,SAAA,CAAAA,OAAC,IAAE,CAAA,SAAA,CAAA,eAAac,EAAS,aAAA,EAAc,SAAK,IAAE,CAAA,SAAA,CAAA,sBAAoBA,EAAS,oBAAoB,GAAA,EAAC,CAAA,CAAA,CAAI,EAAS,WAC9N,MAAI,CAAA,UAAU,cACd,SAAiBtB,GAAAG,EAAYmB,CAAQ,EAEtC,CAAA,GALgFA,EAAS,aAM3F,EAEH,CAAA,CAAA,CAGP,CAAA,CACF,CAAA,CAEJ","x_google_ignoreList":[0]}