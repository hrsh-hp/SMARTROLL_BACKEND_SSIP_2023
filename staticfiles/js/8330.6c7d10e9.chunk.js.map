{"version":3,"file":"static/js/8330.6c7d10e9.chunk.js","mappings":"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","sources":["base_url.js","views/pages/students/Student.js"],"sourcesContent":["const base_url= `${window.location.origin}`;\n// const token = localStorage.getItem('accessToken')\n// const header = {\n//     \"Content-Type\":\"application/json\",\n//     \"Authorization\": `Bearer ${token}`,\n//     'ngrok-skip-browser-warning':true\n//   }\nexport default base_url;","import React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport axios from 'axios'\nimport { useRef } from 'react'\nimport {  \n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,  \n  CForm,\n  CFormSelect,\n  CFormLabel,\n  CFormInput,\n  CFormFeedback,\n} from '@coreui/react'\nimport base_url from 'src/base_url'\nimport Swal from 'sweetalert';\nimport './canvasstyle.css'\n\nconst Student = () => {\n  const [Branches, setBranches] = useState([])\n  const [Semesters, setSemesters] = useState([])\n  const [Subjects, setSubjects] = useState([])\n  const [Password, setPassword] = useState('')\n  const [Confirm, setConfirm] = useState('')\n  const [Enrollment, setEnrollment] = useState('')\n  const [current_student, setcurrent_student] = useState('')\n  const [branch_slug, setbranch_slug] = useState('')\n  const [semester_slug, setsemester_slug] = useState('')\n  const [subject_slug, setsubject_slug] = useState([])  \n  const [defaultBranchVal, setDefaultBranchVal] = useState('Select Branch')\n  const [defaultSemesterVal, SetDefaultSemesterVal] = useState('Select Semester')  \n\n  const showAlert = () => {\n    console.log(\"helo\");\n    Swal({\n        title: \"SMARTROLL REGISTRATION\",\n        text: \"You've already been registered\",\n        icon: 'success',\n        button: 'OK',\n      });\n  \n  };\n\n  \n  const [btn_disabled_steps, setbtn_disabled_steps] = useState({\n    steps: { 1: false, 2: false, 3: false, 4: false, 5: false },\n  })\n  // const [studentSignature,setStudentSignature] = useState(false)\n  // const signatureRef = useRef()\n\n  const [Steps, setSteps] = useState(1)\n\n  // const handelClear = (e) => {\n  //   e.preventDefault()\n  //   signatureRef.current.clear()\n  // }  \n\n  const handleEnrollment = (e) => {\n    e.preventDefault()\n    if (Enrollment == '') {\n      alert('Please enter the enrollement')\n    } else {\n      const header = {\n        'Content-Type': 'application/json',\n        'ngrok-skip-browser-warning': true,\n      }\n      const body = {\n        enrollment: Enrollment,\n      }\n\n      axios\n        .post(`${base_url}/auth/api/set_student_creds_1`, body, { headers: header })\n        .then((response) => {\n          setSteps(response.data.steps)\n          let steps = response.data.steps\n\n          let steps_obj = btn_disabled_steps.steps\n          for (let i = 1; i <= steps; i++) {\n            steps_obj[i] = true\n          }\n\n          setbtn_disabled_steps((prevState) => ({\n            ...prevState,\n            ['steps']: steps_obj,\n          }))\n\n          console.log(btn_disabled_steps)\n          if (steps == 2) {\n            setBranches(response.data.branches)\n            setSteps(steps)\n          } else if (steps == 3) {            \n            setSteps(steps)\n            console.log(response.data.branch.branch_name)\n            setDefaultBranchVal(response.data.branch.branch_name)\n            setSemesters(response.data.semesters)\n          }else if (steps == 4) {            \n            setSteps(steps)            \n            setDefaultBranchVal(response.data.branch.branch_name)\n            SetDefaultSemesterVal(response.data.semester.no)\n            setSubjects(response.data.subjects)            \n          }else if (steps == 5) {            \n            setSteps(steps)            \n            setDefaultBranchVal(response.data.branch.branch_name)\n            SetDefaultSemesterVal(response.data.semester.no)\n            setSubjects(response.data.subjects)            \n          }\n          else if (steps == 6) {            \n            setSteps(steps)\n            setDefaultBranchVal(response.data.branch.branch_name)\n            SetDefaultSemesterVal(response.data.semester.no)\n            setSubjects(response.data.subjects)\n            // setStudentSignature(`${base_url}${response.data.signature}`)            \n            showAlert()\n          }\n          setcurrent_student(response.data.student_slug)\n        })\n        .catch((error) => {\n          if (error.response.status === 401) {\n            alert(error.response.data)\n          }\n          if (error.response.status === 500) {\n            alert(error.response.data.data)\n          }\n        })\n    }\n  }\n  const handleBraches = (branch_slug) => {\n    console.log(branch_slug)\n    setbranch_slug(branch_slug)\n  }\n  const handleSemesters = (semester_slug) => {\n    console.log(semester_slug)\n    setsemester_slug(semester_slug)\n  }\n  const handleSubjects = (event) => {\n    const selectedOptions = Array.from(event.target.selectedOptions, (option) => option.value).filter(item => item !== '');\n    if(selectedOptions.length > 0){\n        setsubject_slug(selectedOptions)\n    }else{\n        setsubject_slug([])\n    }\n\n  }\n  const handle_cred_2 = (e) => {    \n    e.preventDefault()\n    const header = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const body = {\n      student_slug: current_student,\n      branch_slug: branch_slug,\n    }\n\n    axios\n      .post(`${base_url}/auth/api/set_student_creds_2`, body, { headers: header })\n      .then((response) => {\n        console.log(response.data)\n        setSteps(response.data.steps)\n        let steps = response.data.steps\n        let steps_obj = btn_disabled_steps.steps\n          for (let i = 1; i <= steps; i++) {\n            steps_obj[i] = true\n          }\n\n          setbtn_disabled_steps((prevState) => ({\n            ...prevState,\n            ['steps']: steps_obj,\n          }))\n          setSemesters(response.data.semesters)\n      })\n      .catch((error) => {\n        console.log(error)\n        if (error.response.status === 401) {\n          alert(error.response.error)\n        }\n        if (error.response.status === 500) {\n          console.log(error)\n          alert(error.response.data.data)\n        }\n      })\n  }\n  const handle_cred_3 = (e) => {\n    e.preventDefault()\n    const header = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const body = {\n      student_slug: current_student,\n      semester_slug: semester_slug,\n    }\n\n    axios\n      .post(`${base_url}/auth/api/set_student_creds_3`, body, { headers: header })\n      .then((response) => {\n        console.log(response.data)\n        setSubjects(response.data.subjects)\n        setSteps(response.data.steps)\n        let steps = response.data.steps\n        let steps_obj = btn_disabled_steps.steps\n          for (let i = 1; i <= steps; i++) {\n            steps_obj[i] = true\n          }\n\n          setbtn_disabled_steps((prevState) => ({\n            ...prevState,\n            ['steps']: steps_obj,\n          }))\n      })\n      .catch((error) => {\n        if (error.response.status === 401) {\n          alert(error.response.data)\n        }\n        if (error.response.status === 500) {\n          alert(error.response.data.data)\n        }\n      })\n  }\n  const handle_cred_4 = (e) => {\n    e.preventDefault()\n    if(subject_slug.length <= 0){\n        return\n    }\n    const header = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    console.log(current_student)\n    const body = {\n      student_slug: current_student,\n      subject_arr: subject_slug,\n    }\n\n    axios\n      .post(`${base_url}/auth/api/set_student_creds_4`, body, { headers: header })\n      .then((response) => {             \n        setSteps(response.data.steps)\n        let steps = response.data.steps\n        let steps_obj = btn_disabled_steps.steps\n          for (let i = 1; i <= steps; i++) {\n            steps_obj[i] = true\n          }\n\n          setbtn_disabled_steps((prevState) => ({\n            ...prevState,\n            ['steps']: steps_obj,\n          }))\n      })\n      .catch((error) => {\n        if (error.response.status === 401) {\n          alert(error.response.data)\n        }\n        if (error.response.status === 500) {\n          alert(error.response.data.data)\n        }\n      })\n  }\n  const handle_cred_5 = (e) => {\n    e.preventDefault()\n    if(Password == '' || Confirm == '' || Password !== Confirm){\n      alert(\"Please provide a valid password\")\n    }\n    // let signatureb64 = signatureRef.currclent.toDataURL()    \n    const header = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }    \n    const body = {\n      student_slug: current_student,\n      // signatureb64:signat  ureb64,\n      password: Password\n    }\n\n    axios\n      .post(`${base_url}/auth/api/set_student_creds_5`, body, { headers: header })\n      .then((response) => {             \n        setSteps(response.data.steps)\n        let steps = response.data.steps\n        if(steps == 6){     \n          setSteps(response.data.steps)\n          let steps = response.data.steps\n          let steps_obj = btn_disabled_steps.steps\n            for (let i = 1; i <= steps; i++) {\n              steps_obj[i] = true\n            }\n\n            setbtn_disabled_steps((prevState) => ({\n              ...prevState,\n              ['steps']: steps_obj,\n          }))\n          // setStudentSignature(`${base_url}${response.data.signature}`)\n          showAlert()\n        }\n      })\n      .catch((error) => {\n        if (error.response.status === 401) {\n          alert(error.response.data)\n        }\n        if (error.response.status === 500) {\n          alert(error.response.data.data)\n        }\n      })\n  }  \n    return (\n      <>\n        <CCard>\n          <CCardHeader>Student Details</CCardHeader>\n          <CCardBody>\n            <CCardHeader>Step 1:</CCardHeader>\n            <CForm>\n              <CForm className=\"row g-3 needs-validation\" noValidate>\n                {Steps >= 1 ? (\n                  <>\n                    <CCol md={12}>\n                      <CFormLabel htmlFor=\"validationCustom02\">Student Enrollment:</CFormLabel>\n                      <CFormInput\n                        type=\"number\"\n                        id=\"validationCustom02\"\n                        onChange={(e) => {\n                          console.log(e.target.value)\n                          setEnrollment(e.target.value)\n                        }}\n                        disabled={btn_disabled_steps.steps[1]}\n                      />\n                      <CFormFeedback valid>Looks good!</CFormFeedback>\n                    </CCol>\n                    <CCol xs={12}>\n                      <button                      \n                        className={`btn btn-outline-dark form-control ${btn_disabled_steps.steps[1] || Steps[1] ? 'd-none': ''}`}\n                        onClick={(e) => {\n                          handleEnrollment(e)\n                        }}\n                      >\n                        Set\n                      </button>\n                    </CCol>\n                  </>\n                ) : null}\n                <CCardHeader>Step 2:</CCardHeader>\n                {Steps >= 2 ? (\n                  <>\n                    <>\n                      <CCol md={12}>\n                        <CFormLabel htmlFor=\"validationCustom02\">Select Branch</CFormLabel>\n                        <CFormSelect\n                          autoComplete=\"off\"\n                          id=\"classroom_select\"                        \n                          onChange={(e) => {\n                            handleBraches(e.target.value)\n                          }}\n                          disabled={btn_disabled_steps.steps[3]}\n                        >\n                          <option value=\"\">{defaultBranchVal}</option>\n                          {Branches.length > 0\n                            ? Branches.map((item, index) => (\n                                <option key={index} value={item.slug}>\n                                  {item.branch_name}\n                                </option>\n                              ))\n                            : null}\n                        </CFormSelect>\n                      </CCol>\n                      <CCol xs={12}>\n                        <button                        \n                          className={`btn btn-outline-dark form-control ${btn_disabled_steps.steps[3] || Steps[3] ? 'd-none': ''}`}\n                          onClick={(e) => {\n                            handle_cred_2(e)\n                          }}\n                        >\n                          Set\n                        </button>\n                      </CCol>\n                    </>\n                  </>\n                ) : null}\n  \n                <CCardHeader>Step 3:</CCardHeader>\n                {Steps >= 3 ? (\n                  <>\n                   <CCol md={12}>\n                    <CFormLabel htmlFor=\"validationCustom01\">Select Semester</CFormLabel>\n                    <CFormSelect\n                      autoComplete=\"off\"\n                      id=\"subject_select\"\n                      aria-label=\"Default select example\"\n                      onChange={(e) => {\n                          handleSemesters(e.target.value)\n                      }}\n                      disabled={btn_disabled_steps.steps[4]}\n                    >\n                      <option value=\"\">{defaultSemesterVal}</option>\n                      {Semesters.length > 0\n                            ? Semesters.map((item, index) => (\n                                <option key={index} value={item.slug}>\n                                  Semester - {item.no}\n                                </option>\n                              ))\n                      : null}\n                    </CFormSelect>\n                  </CCol>\n                  <CCol xs={12}>\n                        <button\n                          className={`btn btn-outline-dark form-control ${btn_disabled_steps.steps[4] || Steps[4] ? 'd-none': ''}`}\n                          onClick={(e) => {\n                            handle_cred_3(e)\n                          }}\n                        >\n                          Set\n                        </button>\n                      </CCol>\n                  </>\n                ) : null}\n  \n                <CCardHeader>Step 4:</CCardHeader>\n                {Steps >= 4 ? (\n                   <>\n                   <CCol md={12}>\n                    <CFormLabel htmlFor=\"validationCustom01\">Select Subject</CFormLabel>\n                    <CFormSelect\n                      multiple\n                      autoComplete=\"off\"\n                      id=\"subject_select\"\n                      aria-label=\"Default select example\"\n                      onChange={handleSubjects}\n                      disabled={btn_disabled_steps.steps[5]}\n                    >                    \n                      {Subjects.length > 0\n                            ? Subjects.map((item, index) => (\n                                <option key={index} value={item.slug} {...item ? 'selected' : ''}>\n                                  {item.subject_name}\n                                </option>\n                              ))\n                      : null}\n                    </CFormSelect>\n                  </CCol>\n                  <CCol xs={12}>\n                        <button                        \n                          className={`btn btn-outline-dark form-control ${btn_disabled_steps.steps[5] || Steps[5] ? 'd-none': ''}`}\n                          onClick={(e) => {\n                            handle_cred_4(e)\n                          }}\n                        >\n                          Set\n                        </button>\n                      </CCol>\n                  </>\n                ) : null}\n  \n                <CCardHeader>Step 5:</CCardHeader>\n                {Steps >= 5 ? (\n                  <>\n                    <CCol md={12} \n                    className={`${btn_disabled_steps.steps[6] || Steps[6] ? 'd-none': ''}`}\n                    >\n                      <CFormLabel htmlFor=\"validationCustom02\">Password</CFormLabel>\n                      <CFormInput\n                        type=\"password\"\n                        id=\"validationCustom02\"\n                        onChange={(e) => {\n                          setPassword(e.target.value)\n                        }}\n                      />\n                      <CFormFeedback valid>Looks good!</CFormFeedback>\n                    </CCol>\n                    <CCol md={12}\n                    className={`${btn_disabled_steps.steps[6] || Steps[6] ? 'd-none': ''}`}\n                    >\n                      <CFormLabel htmlFor=\"validationCustom02\">Confirm Password</CFormLabel>\n                      <CFormInput\n                        type=\"password\"\n                        id=\"validationCustom02\"\n                        onChange={(e) => {\n                          setConfirm(e.target.value)\n                        }}                        \n                      />\n                      <CFormFeedback valid>Looks good!</CFormFeedback>\n                    </CCol>\n                    <CCol xs={12}>\n                  <button className={`btn btn-outline-dark form-control mb ${btn_disabled_steps.steps[6] || Steps[6] ? 'd-none': ''}`} onClick={(e) => handle_cred_5(e)}>Set</button>\n                </CCol>\n                  </>\n                ) : null}\n              </CForm>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </>\n    ) \n\n}\n\nexport default Student\n"],"names":["concat","window","location","host","Student","Branches","setBranches","useState","Semesters","setSemesters","Subjects","setSubjects","Password","setPassword","Confirm","setConfirm","Enrollment","setEnrollment","current_student","setcurrent_student","branch_slug","setbranch_slug","semester_slug","setsemester_slug","subject_slug","setsubject_slug","defaultBranchVal","setDefaultBranchVal","defaultSemesterVal","SetDefaultSemesterVal","showAlert","console","log","Swal","title","text","icon","button","btn_disabled_steps","setbtn_disabled_steps","steps","Steps","setSteps","_jsx","_Fragment","children","_jsxs","CCard","CCardHeader","CCardBody","CForm","className","noValidate","CCol","md","CFormLabel","htmlFor","CFormInput","type","id","onChange","e","target","value","disabled","CFormFeedback","valid","xs","onClick","preventDefault","alert","header","body","enrollment","axios","post","base_url","headers","then","response","data","steps_obj","i","prevState","branches","branch","branch_name","semesters","semester","no","subjects","student_slug","catch","error","status","handleEnrollment","CFormSelect","autoComplete","handleBraches","length","map","item","index","slug","handle_cred_2","handleSemesters","handle_cred_3","multiple","event","selectedOptions","Array","from","option","filter","subject_name","subject_arr","handle_cred_4","password","handle_cred_5"],"sourceRoot":""}